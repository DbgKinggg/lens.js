import 'isomorphic-unfetch';
export declare const GET_PING = "\n  query {\n    ping\n  }\n";
export declare const GET_DEFAULT_PROFILES = "\n  query($request: DefaultProfileRequest!) {\n    defaultProfile(request: $request) {\n      id\n      name\n      bio\n      attributes {\n        displayType\n        traitType\n        key\n        value\n      }\n      followNftAddress\n      metadata\n      isDefault\n      picture {\n        ... on NftImage {\n          contractAddress\n          tokenId\n          uri\n          verified\n        }\n        ... on MediaSet {\n          original {\n            url\n            mimeType\n          }\n        }\n        __typename\n      }\n      handle\n      coverPicture {\n        ... on NftImage {\n          contractAddress\n          tokenId\n          uri\n          verified\n        }\n        ... on MediaSet {\n          original {\n            url\n            mimeType\n          }\n        }\n        __typename\n      }\n      ownedBy\n      dispatcher {\n        address\n        canUseRelay\n      }\n      stats {\n        totalFollowers\n        totalFollowing\n        totalPosts\n        totalComments\n        totalMirrors\n        totalPublications\n        totalCollects\n      }\n      followModule {\n        ... on FeeFollowModuleSettings {\n          type\n          amount {\n            asset {\n              symbol\n              name\n              decimals\n              address\n            }\n            value\n          }\n          recipient\n        }\n        ... on ProfileFollowModuleSettings {\n         type\n        }\n        ... on RevertFollowModuleSettings {\n         type\n        }\n      }\n    }\n  }\n";
export declare const GET_PROFILE_FROM_ID = "\nquery($request: SingleProfileQueryRequest!) {\n  profile(request: $request) {\n      id\n      name\n      bio\n      attributes {\n        displayType\n        traitType\n        key\n        value\n      }\n      followNftAddress\n      metadata\n      isDefault\n      picture {\n        ... on NftImage {\n          contractAddress\n          tokenId\n          uri\n          verified\n        }\n        ... on MediaSet {\n          original {\n            url\n            mimeType\n          }\n        }\n        __typename\n      }\n      handle\n      coverPicture {\n        ... on NftImage {\n          contractAddress\n          tokenId\n          uri\n          verified\n        }\n        ... on MediaSet {\n          original {\n            url\n            mimeType\n          }\n        }\n        __typename\n      }\n      ownedBy\n      dispatcher {\n        address\n        canUseRelay\n      }\n      stats {\n        totalFollowers\n        totalFollowing\n        totalPosts\n        totalComments\n        totalMirrors\n        totalPublications\n        totalCollects\n      }\n      followModule {\n        ... on FeeFollowModuleSettings {\n          type\n          amount {\n            asset {\n              symbol\n              name\n              decimals\n              address\n            }\n            value\n          }\n          recipient\n        }\n        ... on ProfileFollowModuleSettings {\n          type\n        }\n        ... on RevertFollowModuleSettings {\n          type\n        }\n      }\n  }\n}\n";
export declare const GET_RECOMMENDED_PROFILES = "\nquery RecommendedProfiles {\n  recommendedProfiles {\n        id\n      name\n      bio\n      attributes {\n        displayType\n        traitType\n        key\n        value\n      }\n        followNftAddress\n      metadata\n      isDefault\n      picture {\n        ... on NftImage {\n          contractAddress\n          tokenId\n          uri\n          verified\n        }\n        ... on MediaSet {\n          original {\n            url\n            mimeType\n          }\n        }\n        __typename\n      }\n      handle\n      coverPicture {\n        ... on NftImage {\n          contractAddress\n          tokenId\n          uri\n          verified\n        }\n        ... on MediaSet {\n          original {\n            url\n            mimeType\n          }\n        }\n        __typename\n      }\n      ownedBy\n      dispatcher {\n        address\n        canUseRelay\n      }\n      stats {\n        totalFollowers\n        totalFollowing\n        totalPosts\n        totalComments\n        totalMirrors\n        totalPublications\n        totalCollects\n      }\n      followModule {\n        ... on FeeFollowModuleSettings {\n          type\n          amount {\n            asset {\n              symbol\n              name\n              decimals\n              address\n            }\n            value\n          }\n          recipient\n        }\n        ... on ProfileFollowModuleSettings {\n         type\n        }\n        ... on RevertFollowModuleSettings {\n         type\n        }\n      }\n  }\n}\n";
export declare const GET_CHALLENGE = "\n  query($request: ChallengeRequest!) {\n    challenge(request: $request) { text }\n  }\n";
export declare const AUTHENTICATION = "\nmutation($request: SignedAuthChallenge!) { \n  authenticate(request: $request) {\n    accessToken\n    refreshToken\n  }\n}\n";
export declare const REFRESH_AUTHENTICATION = "\nmutation($request: RefreshRequest!) { \n  refresh(request: $request) {\n    accessToken\n    refreshToken\n  }\n}\n";
export declare const VERIFY = "\n  query($request: VerifyRequest!) {\n    verify(request: $request)\n  }\n";
export declare const EXPLORE_PUBLICATIONS = "\n  query($request: ExplorePublicationRequest!) {\n    explorePublications(request: $request) {\n      items {\n        __typename \n        ... on Post {\n          ...PostFields\n        }\n        ... on Comment {\n          ...CommentFields\n        }\n        ... on Mirror {\n          ...MirrorFields\n        }\n      }\n      pageInfo {\n        prev\n        next\n        totalCount\n      }\n    }\n  }\n\n  fragment MediaFields on Media {\n    url\n    width\n    height\n    mimeType\n  }\n\n  fragment ProfileFields on Profile {\n    id\n    name\n    bio\n    attributes {\n      displayType\n      traitType\n      key\n      value\n    }\n        isFollowedByMe\n    isFollowing(who: null)\n        followNftAddress\n    metadata\n    isDefault\n    handle\n    picture {\n      ... on NftImage {\n        contractAddress\n        tokenId\n        uri\n        verified\n      }\n      ... on MediaSet {\n        original {\n          ...MediaFields\n        }\n        small {\n          ...MediaFields\n        }\n        medium {\n          ...MediaFields\n        }\n      }\n    }\n    coverPicture {\n      ... on NftImage {\n        contractAddress\n        tokenId\n        uri\n        verified\n      }\n      ... on MediaSet {\n        original {\n          ...MediaFields\n        }\n        small {\n         ...MediaFields\n        }\n        medium {\n          ...MediaFields\n        }\n      }\n    }\n    ownedBy\n    dispatcher {\n      address\n    }\n    stats {\n      totalFollowers\n      totalFollowing\n      totalPosts\n      totalComments\n      totalMirrors\n      totalPublications\n      totalCollects\n    }\n    followModule {\n      ... on FeeFollowModuleSettings {\n        type\n        amount {\n          asset {\n            name\n            symbol\n            decimals\n            address\n          }\n          value\n        }\n        recipient\n      }\n      ... on ProfileFollowModuleSettings {\n       type\n      }\n      ... on RevertFollowModuleSettings {\n       type\n      }\n    }\n  }\n\n  fragment PublicationStatsFields on PublicationStats { \n    totalAmountOfMirrors\n    totalAmountOfCollects\n    totalAmountOfComments\n  }\n\n  fragment MetadataOutputFields on MetadataOutput {\n    name\n    description\n    content\n    media {\n      original {\n        ...MediaFields\n      }\n      small {\n        ...MediaFields\n      }\n      medium {\n        ...MediaFields\n      }\n    }\n    attributes {\n      displayType\n      traitType\n      value\n    }\n  }\n\n  fragment Erc20Fields on Erc20 {\n    name\n    symbol\n    decimals\n    address\n  }\n\n  fragment CollectModuleFields on CollectModule {\n    __typename\n    ... on FreeCollectModuleSettings {\n      type\n    }\n    ... on FeeCollectModuleSettings {\n      type\n      amount {\n        asset {\n          ...Erc20Fields\n        }\n        value\n      }\n      recipient\n      referralFee\n    }\n    ... on LimitedFeeCollectModuleSettings {\n      type\n      collectLimit\n      amount {\n        asset {\n          ...Erc20Fields\n        }\n        value\n      }\n      recipient\n      referralFee\n    }\n    ... on LimitedTimedFeeCollectModuleSettings {\n      type\n      collectLimit\n      amount {\n        asset {\n          ...Erc20Fields\n        }\n        value\n      }\n      recipient\n      referralFee\n      endTimestamp\n    }\n    ... on RevertCollectModuleSettings {\n      type\n    }\n    ... on TimedFeeCollectModuleSettings {\n      type\n      amount {\n        asset {\n          ...Erc20Fields\n        }\n        value\n      }\n      recipient\n      referralFee\n      endTimestamp\n    }\n  }\n\n  fragment PostFields on Post {\n    id\n    profile {\n      ...ProfileFields\n    }\n    stats {\n      ...PublicationStatsFields\n    }\n    metadata {\n      ...MetadataOutputFields\n    }\n    createdAt\n    collectModule {\n      ...CollectModuleFields\n    }\n    referenceModule {\n      ... on FollowOnlyReferenceModuleSettings {\n        type\n      }\n    }\n    appId\n        hidden\n        reaction(request: null)\n        mirrors(by: null)\n    hasCollectedByMe\n  }\n\n  fragment MirrorBaseFields on Mirror {\n    id\n    profile {\n      ...ProfileFields\n    }\n    stats {\n      ...PublicationStatsFields\n    }\n    metadata {\n      ...MetadataOutputFields\n    }\n    createdAt\n    collectModule {\n      ...CollectModuleFields\n    }\n    referenceModule {\n      ... on FollowOnlyReferenceModuleSettings {\n        type\n      }\n    }\n    appId\n      hidden\n    reaction(request: null)\n    hasCollectedByMe\n  }\n\n  fragment MirrorFields on Mirror {\n    ...MirrorBaseFields\n    mirrorOf {\n     ... on Post {\n        ...PostFields          \n     }\n     ... on Comment {\n        ...CommentFields          \n     }\n    }\n  }\n\n  fragment CommentBaseFields on Comment {\n    id\n    profile {\n      ...ProfileFields\n    }\n    stats {\n      ...PublicationStatsFields\n    }\n    metadata {\n      ...MetadataOutputFields\n    }\n    createdAt\n    collectModule {\n      ...CollectModuleFields\n    }\n    referenceModule {\n      ... on FollowOnlyReferenceModuleSettings {\n        type\n      }\n    }\n    appId\n      hidden\n    reaction(request: null)\n    mirrors(by: null)\n    hasCollectedByMe\n  }\n\n  fragment CommentFields on Comment {\n    ...CommentBaseFields\n    mainPost {\n      ... on Post {\n        ...PostFields\n      }\n      ... on Mirror {\n        ...MirrorBaseFields\n        mirrorOf {\n          ... on Post {\n             ...PostFields          \n          }\n          ... on Comment {\n             ...CommentMirrorOfFields        \n          }\n        }\n      }\n    }\n  }\n\n  fragment CommentMirrorOfFields on Comment {\n    ...CommentBaseFields\n    mainPost {\n      ... on Post {\n        ...PostFields\n      }\n      ... on Mirror {\n         ...MirrorBaseFields\n      }\n    }\n  }\n";
export declare const EXPLORE_PROFILES = "\nquery($request: ExploreProfileResult!) {\n  exploreProfiles(request: $request) {\n    items {\n      id\n      name\n      bio\n      isDefault\n      attributes {\n        displayType\n        traitType\n        key\n        value\n      }\n      metadata\n      handle\n      picture {\n        ... on NftImage {\n          contractAddress\n          tokenId\n          uri\n          chainId\n          verified\n        }\n        ... on MediaSet {\n          original {\n            url\n            mimeType\n          }\n        }\n      }\n      coverPicture {\n        ... on NftImage {\n          contractAddress\n          tokenId\n          uri\n          chainId\n          verified\n        }\n        ... on MediaSet {\n          original {\n            url\n            mimeType\n          }\n        }\n      }\n      ownedBy\n      dispatcher {\n        address\n        canUseRelay\n      }\n      stats {\n        totalFollowers\n        totalFollowing\n        totalPosts\n        totalComments\n        totalMirrors\n        totalPublications\n        totalCollects\n      }\n      followModule {\n        ... on FeeFollowModuleSettings {\n          type\n          contractAddress\n          amount {\n            asset {\n              name\n              symbol\n              decimals\n              address\n            }\n            value\n          }\n          recipient\n        }\n        ... on ProfileFollowModuleSettings {\n        type\n        }\n        ... on RevertFollowModuleSettings {\n        type\n        }\n      }\n    }\n    pageInfo {\n      prev\n      next\n      totalCount\n    }\n  }\n}\n";
export declare const GET_USERS_NFTS = "\n  query($request: NFTsRequest!) {\n    nfts(request: $request) {\n      items {\n        contractName\n        contractAddress\n        symbol\n        tokenId\n        owners {\n          amount\n          address\n        }\n        name\n        description\n        contentURI\n        originalContent {\n          uri\n          metaType\n        }\n        chainId\n        collectionName\n        ercType\n      }\n    pageInfo {\n        prev\n        next\n        totalCount\n    }\n  }\n}\n";
export declare const GET_GLOBAL_PROTOCOL_STATS = "\nquery($request: GlobalProtocolStatsRequest) {\n  globalProtocolStats(request: $request) {\n      totalProfiles\n      totalBurntProfiles\n      totalPosts\n      totalMirrors\n      totalComments\n      totalCollects\n      totalFollows\n      totalRevenue {\n          asset {\n              name\n              symbol\n              decimals\n              address\n          }\n          value\n      }\n   }\n}\n";
export declare const GET_PROFILE_REVENUE = "\nquery($request: ProfileRevenueQueryRequest!) {\n  profileRevenue(request: $request) {\n    items {\n      publication {\n        __typename \n        ... on Post {\n          ...PostFields\n        }\n        ... on Comment {\n          ...CommentFields\n        }\n        ... on Mirror {\n          ...MirrorFields\n        }\n      }\n      earnings {\n        asset {\n          name\n          symbol\n          decimals\n          address\n        }\n        value\n      }\n    }\n    pageInfo {\n      prev\n      next\n      totalCount\n    }\n  }\n}\n\nfragment MediaFields on Media {\n  url\n  width\n  height\n  mimeType\n}\n\nfragment ProfileFields on Profile {\n  id\n  name\n  bio\n  location\n  website\n  twitterUrl\n  handle\n  picture {\n    ... on NftImage {\n      contractAddress\n      tokenId\n      uri\n      verified\n    }\n    ... on MediaSet {\n      original {\n        ...MediaFields\n      }\n      small {\n        ...MediaFields\n      }\n      medium {\n        ...MediaFields\n      }\n    }\n  }\n  coverPicture {\n    ... on NftImage {\n      contractAddress\n      tokenId\n      uri\n      verified\n    }\n    ... on MediaSet {\n      original {\n        ...MediaFields\n      }\n      small {\n       ...MediaFields\n      }\n      medium {\n        ...MediaFields\n      }\n    }\n  }\n  ownedBy\n  depatcher {\n    address\n  }\n  stats {\n    totalFollowers\n    totalFollowing\n    totalPosts\n    totalComments\n    totalMirrors\n    totalPublications\n    totalCollects\n  }\n  followModule {\n    ... on FeeFollowModuleSettings {\n      type\n      amount {\n        asset {\n          name\n          symbol\n          decimals\n          address\n        }\n        value\n      }\n      recipient\n    }\n  }\n}\n\nfragment PublicationStatsFields on PublicationStats { \n  totalAmountOfMirrors\n  totalAmountOfCollects\n  totalAmountOfComments\n}\n\nfragment MetadataOutputFields on MetadataOutput {\n  name\n  description\n  content\n  media {\n    original {\n      ...MediaFields\n    }\n    small {\n      ...MediaFields\n    }\n    medium {\n      ...MediaFields\n    }\n  }\n  attributes {\n    displayType\n    traitType\n    value\n  }\n}\n\nfragment Erc20Fields on Erc20 {\n  name\n  symbol\n  decimals\n  address\n}\n\nfragment CollectModuleFields on CollectModule {\n  __typename\n  ... on EmptyCollectModuleSettings {\n    type\n  }\n  ... on FeeCollectModuleSettings {\n    type\n    amount {\n      asset {\n        ...Erc20Fields\n      }\n      value\n    }\n    recipient\n    referralFee\n  }\n  ... on LimitedFeeCollectModuleSettings {\n    type\n    collectLimit\n    amount {\n      asset {\n        ...Erc20Fields\n      }\n      value\n    }\n    recipient\n    referralFee\n  }\n  ... on LimitedTimedFeeCollectModuleSettings {\n    type\n    collectLimit\n    amount {\n      asset {\n        ...Erc20Fields\n      }\n      value\n    }\n    recipient\n    referralFee\n    endTimestamp\n  }\n  ... on RevertCollectModuleSettings {\n    type\n  }\n  ... on TimedFeeCollectModuleSettings {\n    type\n    amount {\n      asset {\n        ...Erc20Fields\n      }\n      value\n    }\n    recipient\n    referralFee\n    endTimestamp\n  }\n}\n\nfragment PostFields on Post {\n  id\n  profile {\n    ...ProfileFields\n  }\n  stats {\n    ...PublicationStatsFields\n  }\n  metadata {\n    ...MetadataOutputFields\n  }\n  createdAt\n  collectModule {\n    ...CollectModuleFields\n  }\n  referenceModule {\n    ... on FollowOnlyReferenceModuleSettings {\n      type\n    }\n  }\n  appId\n}\n\nfragment MirrorBaseFields on Mirror {\n  id\n  profile {\n    ...ProfileFields\n  }\n  stats {\n    ...PublicationStatsFields\n  }\n  metadata {\n    ...MetadataOutputFields\n  }\n  createdAt\n  collectModule {\n    ...CollectModuleFields\n  }\n  referenceModule {\n    ... on FollowOnlyReferenceModuleSettings {\n      type\n    }\n  }\n  appId\n}\n\nfragment MirrorFields on Mirror {\n  ...MirrorBaseFields\n  mirrorOf {\n   ... on Post {\n      ...PostFields          \n   }\n   ... on Comment {\n      ...CommentFields          \n   }\n  }\n}\n\nfragment CommentBaseFields on Comment {\n  id\n  profile {\n    ...ProfileFields\n  }\n  stats {\n    ...PublicationStatsFields\n  }\n  metadata {\n    ...MetadataOutputFields\n  }\n  createdAt\n  collectModule {\n    ...CollectModuleFields\n  }\n  referenceModule {\n    ... on FollowOnlyReferenceModuleSettings {\n      type\n    }\n  }\n  appId\n}\n\nfragment CommentFields on Comment {\n  ...CommentBaseFields\n  mainPost {\n    ... on Post {\n      ...PostFields\n    }\n    ... on Mirror {\n      ...MirrorBaseFields\n      mirrorOf {\n        ... on Post {\n           ...PostFields          \n        }\n        ... on Comment {\n           ...CommentMirrorOfFields        \n        }\n      }\n    }\n  }\n}\n\nfragment CommentMirrorOfFields on Comment {\n  ...CommentBaseFields\n  mainPost {\n    ... on Post {\n      ...PostFields\n    }\n    ... on Mirror {\n       ...MirrorBaseFields\n    }\n  }\n}\n";
export declare const GET_PUBLICATION_REVENUE = "\nquery($request: PublicationRevenueQueryRequest!) {\n  publicationRevenue(request: $request) {\n    publication {\n      __typename \n      ... on Post {\n          ...PostFields\n      }\n      ... on Comment {\n          ...CommentFields\n      }\n      ... on Mirror {\n          ...MirrorFields\n      }\n    }\n    earnings {\n      asset {\n        name\n        symbol\n        decimals\n        address\n      }\n      value\n    }\n  }\n}\n\nfragment MediaFields on Media {\n  url\n  width\n  height\n  mimeType\n}\n\nfragment ProfileFields on Profile {\n  id\n  name\n  bio\n  attributes {\n    displayType\n    traitType\n    key\n    value\n  }\n  metadata\n  isDefault\n  handle\n  picture {\n    ... on NftImage {\n      contractAddress\n      tokenId\n      uri\n      verified\n    }\n    ... on MediaSet {\n      original {\n        ...MediaFields\n      }\n      small {\n        ...MediaFields\n      }\n      medium {\n        ...MediaFields\n      }\n    }\n  }\n  coverPicture {\n    ... on NftImage {\n      contractAddress\n      tokenId\n      uri\n      verified\n    }\n    ... on MediaSet {\n      original {\n        ...MediaFields\n      }\n      small {\n       ...MediaFields\n      }\n      medium {\n        ...MediaFields\n      }\n    }\n  }\n  ownedBy\n  dispatcher {\n    address\n  }\n  stats {\n    totalFollowers\n    totalFollowing\n    totalPosts\n    totalComments\n    totalMirrors\n    totalPublications\n    totalCollects\n  }\n  followModule {\n    ... on FeeFollowModuleSettings {\n      type\n      amount {\n        asset {\n          name\n          symbol\n          decimals\n          address\n        }\n        value\n      }\n      recipient\n    }\n    ... on ProfileFollowModuleSettings {\n     type\n    }\n    ... on RevertFollowModuleSettings {\n     type\n    }\n  }\n}\n\nfragment PublicationStatsFields on PublicationStats { \n  totalAmountOfMirrors\n  totalAmountOfCollects\n  totalAmountOfComments\n}\n\nfragment MetadataOutputFields on MetadataOutput {\n  name\n  description\n  content\n  media {\n    original {\n      ...MediaFields\n    }\n    small {\n      ...MediaFields\n    }\n    medium {\n      ...MediaFields\n    }\n  }\n  attributes {\n    displayType\n    traitType\n    value\n  }\n}\n\nfragment Erc20Fields on Erc20 {\n  name\n  symbol\n  decimals\n  address\n}\n\nfragment CollectModuleFields on CollectModule {\n  __typename\n      ... on FreeCollectModuleSettings {\n          type\n    followerOnly\n    contractAddress\n    }\n  ... on FeeCollectModuleSettings {\n    type\n    amount {\n      asset {\n        ...Erc20Fields\n      }\n      value\n    }\n    recipient\n    referralFee\n  }\n  ... on LimitedFeeCollectModuleSettings {\n    type\n    collectLimit\n    amount {\n      asset {\n        ...Erc20Fields\n      }\n      value\n    }\n    recipient\n    referralFee\n  }\n  ... on LimitedTimedFeeCollectModuleSettings {\n    type\n    collectLimit\n    amount {\n      asset {\n        ...Erc20Fields\n      }\n      value\n    }\n    recipient\n    referralFee\n    endTimestamp\n  }\n  ... on RevertCollectModuleSettings {\n    type\n  }\n  ... on TimedFeeCollectModuleSettings {\n    type\n    amount {\n      asset {\n        ...Erc20Fields\n      }\n      value\n    }\n    recipient\n    referralFee\n    endTimestamp\n  }\n}\n\nfragment PostFields on Post {\n  id\n  profile {\n    ...ProfileFields\n  }\n  stats {\n    ...PublicationStatsFields\n  }\n  metadata {\n    ...MetadataOutputFields\n  }\n  createdAt\n  collectModule {\n    ...CollectModuleFields\n  }\n  referenceModule {\n    ... on FollowOnlyReferenceModuleSettings {\n      type\n    }\n  }\n  appId\n}\n\nfragment MirrorBaseFields on Mirror {\n  id\n  profile {\n    ...ProfileFields\n  }\n  stats {\n    ...PublicationStatsFields\n  }\n  metadata {\n    ...MetadataOutputFields\n  }\n  createdAt\n  collectModule {\n    ...CollectModuleFields\n  }\n  referenceModule {\n    ... on FollowOnlyReferenceModuleSettings {\n      type\n    }\n  }\n  appId\n}\n\nfragment MirrorFields on Mirror {\n  ...MirrorBaseFields\n  mirrorOf {\n   ... on Post {\n      ...PostFields          \n   }\n   ... on Comment {\n      ...CommentFields          \n   }\n  }\n}\n\nfragment CommentBaseFields on Comment {\n  id\n  profile {\n    ...ProfileFields\n  }\n  stats {\n    ...PublicationStatsFields\n  }\n  metadata {\n    ...MetadataOutputFields\n  }\n  createdAt\n  collectModule {\n    ...CollectModuleFields\n  }\n  referenceModule {\n    ... on FollowOnlyReferenceModuleSettings {\n      type\n    }\n  }\n  appId\n}\n\nfragment CommentFields on Comment {\n  ...CommentBaseFields\n  mainPost {\n    ... on Post {\n      ...PostFields\n    }\n    ... on Mirror {\n      ...MirrorBaseFields\n      mirrorOf {\n        ... on Post {\n           ...PostFields          \n        }\n        ... on Comment {\n           ...CommentMirrorOfFields        \n        }\n      }\n    }\n  }\n}\n\nfragment CommentMirrorOfFields on Comment {\n  ...CommentBaseFields\n  mainPost {\n    ... on Post {\n      ...PostFields\n    }\n    ... on Mirror {\n       ...MirrorBaseFields\n    }\n  }\n}\n";
export declare const SEARCH = "\nquery($request: SearchQueryRequest!) {\n  search(request: $request) {\n          ... on PublicationSearchResult {\n     __typename \n    items {\n      __typename \n      ... on Comment {\n        ...CommentFields\n      }\n      ... on Post {\n        ...PostFields\n      }\n    }\n    pageInfo {\n      prev\n      totalCount\n      next\n    }\n  }\n  ... on ProfileSearchResult {\n    __typename \n    items {\n      ... on Profile {\n        ...ProfileFields\n      }\n    }\n    pageInfo {\n      prev\n      totalCount\n      next\n    }\n   }\n  }\n}\n\nfragment MediaFields on Media {\nurl\nmimeType\n}\n\nfragment MirrorBaseFields on Mirror {\nid\nprofile {\n  ...ProfileFields\n}\nstats {\n  ...PublicationStatsFields\n}\nmetadata {\n  ...MetadataOutputFields\n}\ncreatedAt\ncollectModule {\n  ...CollectModuleFields\n}\nreferenceModule {\n  ... on FollowOnlyReferenceModuleSettings {\n    type\n  }\n}\nappId\n}\n\nfragment ProfileFields on Profile {\nprofileId: id,\nname\nbio\nattributes {\n  displayType\n  traitType\n  key\n  value\n}\nisFollowedByMe\nisFollowing(who: null)\nmetadataUrl: metadata\nisDefault\nhandle\npicture {\n  ... on NftImage {\n    contractAddress\n    tokenId\n    uri\n    verified\n  }\n  ... on MediaSet {\n    original {\n      ...MediaFields\n    }\n  }\n}\ncoverPicture {\n  ... on NftImage {\n    contractAddress\n    tokenId\n    uri\n    verified\n  }\n  ... on MediaSet {\n    original {\n      ...MediaFields\n    }\n  }\n}\nownedBy\ndispatcher {\n  address\n}\nstats {\n  totalFollowers\n  totalFollowing\n  totalPosts\n  totalComments\n  totalMirrors\n  totalPublications\n  totalCollects\n}\nfollowModule {\n  ... on FeeFollowModuleSettings {\n    type\n    amount {\n      asset {\n        name\n        symbol\n        decimals\n        address\n      }\n      value\n    }\n    recipient\n  }\n  ... on ProfileFollowModuleSettings {\n   type\n  }\n  ... on RevertFollowModuleSettings {\n   type\n  }\n}\n}\n\nfragment PublicationStatsFields on PublicationStats { \ntotalAmountOfMirrors\ntotalAmountOfCollects\ntotalAmountOfComments\n}\n\nfragment MetadataOutputFields on MetadataOutput {\nname\ndescription\ncontent\nmedia {\n  original {\n    ...MediaFields\n  }\n}\nattributes {\n  displayType\n  traitType\n  value\n}\n}\n\nfragment Erc20Fields on Erc20 {\nname\nsymbol\ndecimals\naddress\n}\n\nfragment CollectModuleFields on CollectModule {\n__typename\n  ... on FreeCollectModuleSettings {\n      type\n  followerOnly\n  contractAddress\n}\n... on FeeCollectModuleSettings {\n  type\n  amount {\n    asset {\n      ...Erc20Fields\n    }\n    value\n  }\n  recipient\n  referralFee\n}\n... on LimitedFeeCollectModuleSettings {\n  type\n  collectLimit\n  amount {\n    asset {\n      ...Erc20Fields\n    }\n    value\n  }\n  recipient\n  referralFee\n}\n... on LimitedTimedFeeCollectModuleSettings {\n  type\n  collectLimit\n  amount {\n    asset {\n      ...Erc20Fields\n    }\n    value\n  }\n  recipient\n  referralFee\n  endTimestamp\n}\n... on RevertCollectModuleSettings {\n  type\n}\n... on TimedFeeCollectModuleSettings {\n  type\n  amount {\n    asset {\n      ...Erc20Fields\n    }\n    value\n  }\n  recipient\n  referralFee\n  endTimestamp\n}\n}\n\nfragment PostFields on Post {\nid\nprofile {\n  ...ProfileFields\n}\nstats {\n  ...PublicationStatsFields\n}\nmetadata {\n  ...MetadataOutputFields\n}\ncreatedAt\ncollectModule {\n  ...CollectModuleFields\n}\nreferenceModule {\n  ... on FollowOnlyReferenceModuleSettings {\n    type\n  }\n}\nappId\n  hidden\n  reaction(request: null)\n  mirrors(by: null)\nhasCollectedByMe\n}\n\nfragment CommentBaseFields on Comment {\nid\nprofile {\n  ...ProfileFields\n}\nstats {\n  ...PublicationStatsFields\n}\nmetadata {\n  ...MetadataOutputFields\n}\ncreatedAt\ncollectModule {\n  ...CollectModuleFields\n}\nreferenceModule {\n  ... on FollowOnlyReferenceModuleSettings {\n    type\n  }\n}\nappId\nhidden\nreaction(request: null)\n  mirrors(by: null)\nhasCollectedByMe\n}\n\nfragment CommentFields on Comment {\n...CommentBaseFields\nmainPost {\n  ... on Post {\n    ...PostFields\n  }\n  ... on Mirror {\n    ...MirrorBaseFields\n    mirrorOf {\n      ... on Post {\n         ...PostFields          \n      }\n      ... on Comment {\n         ...CommentMirrorOfFields        \n      }\n    }\n  }\n}\n}\n\nfragment CommentMirrorOfFields on Comment {\n...CommentBaseFields\nmainPost {\n  ... on Post {\n    ...PostFields\n  }\n  ... on Mirror {\n     ...MirrorBaseFields\n  }\n}\n}\n";
